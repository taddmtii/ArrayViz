- Successfully creating AST with no unneccesary wrapping

- Completed expression support and associated commands to reflect changes in the state when executed.

- Generated comprehensive test suite to test the following...
    1. Basic Expression types (Numbers, strings, booleans, identifier retreival)
    2. Arithmetic operations (addition, subtraction, mult, div, integer div, modulo, power, string concatenation)
    3. Unary operations (negative, positive, logical not)
    4. Comparison operations (LT, GT, LTE, GTE, NE)
    5. List operations (empty list, number list, mixed type list)
    6. list access with indices
    7. func calls (print, len, type)
    8. "complex expressions" (nested arithmetic, power with addition, variables within expressions)
    9. Assignment statements
    10. Small performance tests (large lists, deeply nested expressions)

- Created Architecture diagram in paper to demonstrate program flow
